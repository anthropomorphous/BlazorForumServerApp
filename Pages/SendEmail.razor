@page "/sendemail"
@using System.Net;
@using System.Net.Mail;
@using MimeKit;
@using BlazorServerApp.Data
@using BlazorServerAppDB.Data.BlazorServerApp
@using Microsoft.Extensions.Logging
@inject ILogger<SendEmail> logger
@inject Data.EmailService EmailService
@inject NavigationManager NavigationManager
@inherits OwningComponentBase<EmailService>


<style>
    input.my-input {
        width: 325px;
    }

    input.large-input {
        width: 350px;
        line-grid: create;
        height: 100px;
    }
</style>

<h1>Отправьте письмо участнику:</h1>
<br />

<AuthorizeView>
    <Authorized>

        <div>
            <div>
                Почта:
                <input class="my-input form-control"
                       type="text"
                       name="customerEmail"
                       placeholder="blazor.2020@mail.ru" />
            </div>
            <br />

            <div>
                <span>
                    Получатель:
                    <input class="my-input form-control"
                           typeof="text"
                           placeholder="Email участника"
                           @bind="eMailTo" />
                </span>
            </div>
            <br />

            <div>
                <span>
                    Получатель:
                    <input class="my-input form-control"
                           typeof="text"
                           placeholder="Тема"
                           @bind="subject" />
                </span>
            </div>
            <br />

            <div>
                Ваше сообщение: <br />
                <textarea name="customerRequest"
                          class="form-control"
                          cols="45"
                          rows="4"
                          placeholder="Введите сообщение..."
                          @bind="message">
        </textarea>

            </div>
            <br />

            <button class="btn btn-primary" style="background-color: #4CAF50;"
                    @onclick="SendMail">
                Отправить
            </button>

            @if (ShowPopup)
            {
                <div class="modal" tabindex="-1" style="display:block" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h3 class="modal-title">Сообщение отправлено</h3>
                                <button type="button" class="close"
                                        @onclick="ClosePopup">
                                    <span aria-hidden="true">X</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <p>Войдите в свой аккаунт либо зарегистрируйтесь.</p>
    </NotAuthorized>
</AuthorizeView>

@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    string subject = "";
    string message = "";
    string eMailTo = "";

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
    }

    bool ShowPopup = false;

    void ClosePopup()
    {
        ShowPopup = false;
    }

    async Task SendMail()
    {

        var result =
           @Service.SendEmailAsync(eMailTo, subject, message);

        ShowPopup = true;
    }

}
